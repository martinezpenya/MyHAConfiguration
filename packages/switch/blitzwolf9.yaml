##########################################
## BlitzWolf SHP2
##

homeassistant:
  customize:
    switch.BliTZW0lF_9:
      friendly_name: "Nevera"
    automation.bw9_switch_left_on:
      icon: mdi:power-plug-off
      friendly_name: "Auto power off"
    script.bw9_reset:
      icon: mdi:restore
      friendly_name: "Reset"
    sensor.bw9_power:
      friendly_name: "Power"
    sensor.bw9_current:
      friendly_name: "Current"
    sensor.bw9_voltage:
      friendly_name: "Voltage"
    sensor.bw9_today:
      friendly_name: "kWh Today"
    sensor.bw9_total:
      friendly_name: "kWh Total"
    sensor.bw9_totalstarttime:
      friendly_name: "Last reset"

# input_number:
#   bw9_kw_pico:
#     name: 'KW pico'
#     icon: mdi:trending-up
#     unit_of_measurement: "KW"
#     min: 0
#     max: 1000
#     mode: box
#     step: 0.001 
#   bw9_kw_valle:
#     name: 'KW valle'
#     icon: mdi:trending-down
#     unit_of_measurement: "KW"
#     min: 0
#     max: 1000
#     mode: box
#     step: 0.001 
#   bw9_partial:
#     name: partial data
#     icon: mdi:calculator-variant
#     unit_of_measurement: "KW"
#     min: 0
#     max: 1000
#     mode: box
#     step: 0.001  

switch:
  - platform: mqtt
    name: "BliTZW0lF_9"
    state_topic: "stat/BliTZW0lF_9/POWER"
    command_topic: "cmnd/BliTZW0lF_9/POWER"
    availability_topic: "tele/BliTZW0lF_9/LWT"
    qos: 2
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    optimistic: false
    icon: mdi:speedometer

sensor:
  - platform: mqtt
    name: bw9_totalstarttime
    state_topic: "tele/BliTZW0lF_9/SENSOR"
    value_template: "{{ as_timestamp(strptime(value_json['ENERGY'].TotalStartTime, '%Y-%m-%dT%H:%M:%S%z', now())) | timestamp_custom('%d/%m/%Y %H:%M:%S' ) }}"
    unit_of_measurement: ""
    icon: mdi:update
    
  - platform: mqtt
    name: bw9_total
    state_topic: "tele/BliTZW0lF_9/SENSOR"
    value_template: "{{ value_json['ENERGY'].Total }}"
    unit_of_measurement: "kWh"
    icon: mdi:elevation-rise
  
  - platform: mqtt
    name: bw9_today
    state_topic: "tele/BliTZW0lF_9/SENSOR"
    value_template: "{{ value_json['ENERGY'].Today }}"
    unit_of_measurement: "kWh"  
    icon: mdi:elevation-rise
    
  - platform: mqtt
    name: bw9_power
    state_topic: "tele/BliTZW0lF_9/SENSOR"
    value_template: "{{ value_json['ENERGY'].Power }}"
    unit_of_measurement: "W"
    icon: mdi:elevation-rise

  - platform: mqtt
    name: bw9_voltage
    state_topic: "tele/BliTZW0lF_9/SENSOR"
    value_template: "{{ value_json['ENERGY'].Voltage }}"
    unit_of_measurement: "V"
    icon: mdi:current-ac

  - platform: mqtt
    name: bw9_current
    state_topic: "tele/BliTZW0lF_9/SENSOR"
    value_template: "{{ value_json['ENERGY'].Current }}"
    unit_of_measurement: "A"
    icon: mdi:transfer

  - platform: template
    sensors:
      # bw9_kw_valle:
      #   friendly_name: 'KW valle'
      #   value_template: '{{ (states("input_number.bw9_kw_valle") | float| round(6)) }}'
      #   icon_template: mdi:trending-down
      #   unit_of_measurement: "KW"
      # bw9_kw_pico:
      #   friendly_name: 'KW pico'
      #   value_template: '{{ (states("input_number.bw9_kw_pico") | float | round(6)) }}'
      #   icon_template: mdi:trending-up
      #   unit_of_measurement: "KW"
      # bw9_eur_valle:
      #   friendly_name: '€ valle'
      #   value_template: '{{ (states("input_number.bw9_kw_valle") | multiply(states("input_text.energy_cost_v")|float) | float | round(4)) }}'
      #   unit_of_measurement: "€"
      #   icon_template: mdi:progress-download
      # bw9_eur_pico:
      #   friendly_name: '€ pico'
      #   value_template: '{{ (states("input_number.bw9_kw_pico") | multiply(states("input_text.energy_cost_p")|float) | float | round(4)) }}'
      #   icon_template: mdi:progress-upload
      #   unit_of_measurement: "€"
      # bw9_total_euro:
      #   friendly_name: '€ Total'
      #   value_template: '{{(((states.sensor.bw9_eur_valle.state | float) + (states.sensor.bw9_eur_pico.state  | float)) | round(4)) }}'
      #   unit_of_measurement: "€"
      #   icon_template: mdi:currency-eur   
      # bw9_energy_cost_hour:
      #   friendly_name: "bw9_Cost (current hour)"
      #   unit_of_measurement: '€'
      #   value_template: "{%set IVA = 1.10 |float %}
      #     {%set imp_elec = 1.05112696 |float %}
      #     {{ (( states('sensor.bw9_hourly_energy') | float * (states('sensor.pvpc') | float) ) * imp_elec * IVA )  | round(3) }}"
      bw9_energy:
        device_class: energy
        friendly_name: "Energy {{state_attr('switch.BliTZW0lF_9', 'friendly_name')}}"
        attribute_templates:
          last_reset: '1970-01-01T00:00:00+00:00'
          state_class: measurement
          device_class: energy
        unit_of_measurement: 'kWh'
        value_template: "{{ states('sensor.bw9_total') }}"
        icon_template: mdi:mdi-current-ac

utility_meter:
  bw9_hourly_energy:
    source: sensor.bw9_total
    cycle: hourly
  bw9_daily_energy:
    source: sensor.bw9_total
    cycle: daily
  bw9_monthly_energy:
    source: sensor.bw9_total
    cycle: monthly
  bw9_yearly_energy:
    source: sensor.bw9_total
    cycle: yearly    
  # bw9_monthly_energy_cost:
  #   source: sensor.bw9_energy_cost_hour
  #   cycle: monthly

automation:
  # - alias: 'bw9 reset'
  #   initial_state: true
  #   trigger:
  #     - platform: template
  #       value_template: '{{ now().strftime("%d") == "01" }}'
  #   action:
  #     - service: script.bw9_report
  #     - service: script.bw9_reset
        
  # - alias: 'bw9 Valle'
  #   initial_state: on
  #   trigger:
  #     - platform: template
  #       value_template: '{{ now().strftime("%M") == "00" }}'
  #   condition:
  #     - condition: template
  #       value_template: '{{ now().strftime("%H") == "13" }}'
  #   action:
  #     - service: input_number.set_value
  #       data_template:
  #         entity_id: input_number.bw9_kw_valle
  #         value: "{{ ((states.input_number.bw9_kw_valle.state|float) + ((states.sensor.bw9_total.state|float) - (states.input_number.bw9_partial.state|float))|float) }}"
  #     - service: input_number.set_value
  #       data_template:
  #         entity_id: input_number.bw9_partial
  #         value: "{{ states.sensor.bw9_total.state }}"          

  # - alias: 'bw9 Pico'
  #   initial_state: on
  #   trigger:
  #     - platform: template
  #       value_template: '{{ now().strftime("%M") == "00" }}'
  #   condition:
  #     - condition: template
  #       value_template: '{{ now().strftime("%H") == "23" }}'
  #   action:
  #     - service: input_number.set_value
  #       data_template:
  #         entity_id: input_number.bw9_kw_pico
  #         value: "{{ ((states.input_number.bw9_kw_pico.state|float) + ((states.sensor.bw9_total.state|float) - (states.input_number.bw9_partial.state|float))|float) }}"
  #     - service: input_number.set_value
  #       data_template:
  #         entity_id: input_number.bw9_partial
  #         value: "{{ states.sensor.bw9_total.state }}"      
  - alias: bw9_switch_left_on
    initial_state: false
    trigger:
      - platform: numeric_state
        entity_id: sensor.bw9_power
        below: 30
        above: 1
        for:
          minutes: 5
    action:
      - service: switch.turn_off
        data:
          entity_id:
            - switch.BliTZW0lF_9
      - delay: 0:00:02
      - service: notify.homeassistant
        data:
          message: 
            "{{state_attr('switch.BliTZW0lF_9', 'friendly_name')}} switch is now **{% if is_state('switch.BliTZW0lF_9', 'on') %}ON{% else %}OFF{% endif %}** because it was consuming less than 30W for 5 minutes"          
      - delay: 0:00:02
      - service: persistent_notification.create
        data:
          message: "Is now **{% if is_state('switch.BliTZW0lF_9', 'on') %}ON{% else %}OFF{% endif %}** because it was left on for 5 minutes"
          title: "{{state_attr('switch.BliTZW0lF_9', 'friendly_name')}}"
script:
  # bw9_report:
  #   sequence:
  #     - service: persistent_notification.create
  #       data_template:
  #         title: "{{state_attr('switch.BliTZW0lF_9', 'friendly_name')}} Report"
  #         message: "From {{ (states.sensor.bw9_totalstarttime.state) | timestamp_custom('%d/%m/%Y %H:%M:%S' )}}\n
  #           to {{ as_timestamp(now()) | timestamp_custom('%d/%m/%Y %H:%M:%S' )}}\n\n
  #           KW Pico: {{ states.sensor.bw9_kw_pico.state_with_unit }} \n
  #           KW Vall: {{ states.sensor.bw9_kw_valle.state_with_unit }} \n
  #           Total KW: {{ states.sensor.bw9_total.state_with_unit }}\n\n
  #           € Pico: {{ states.sensor.bw9_eur_pico.state_with_unit }} \n
  #           € Vall: {{ states.sensor.bw9_eur_valle.state_with_unit }} \n
  #           Total €: {{ states.sensor.bw9_total_euro.state_with_unit }}\n"
  bw9_reset:
    sequence:
      - service: mqtt.publish
        data_template:
          topic: "cmnd/BliTZW0lF_9/energyreset1"
          payload: "0"
      - service: mqtt.publish
        data_template:
          topic: "cmnd/BliTZW0lF_9/energyreset2"
          payload: "0"
      - service: mqtt.publish
        data_template:
          topic: "cmnd/BliTZW0lF_9/energyreset3"
          payload: "0"
      # - service: input_number.set_value
      #   data_template:
      #     entity_id: input_number.bw9_Kw_pico
      #     value: "0"
      # - service: input_number.set_value
      #   data_template:
      #     entity_id: input_number.bw9_Kw_valle
      #     value: "0"
      # - service: input_number.set_value
      #   data_template:
      #     entity_id: input_number.bw9_partial
      #     value: "0"

#########################
#Lovelace entities Card:#
#########################
# entities:
#   - entity: switch.BliTZW0lF_9
#   - entity: sensor.bw9_power
#   - entity: sensor.bw9_current
#   - entity: sensor.bw9_voltage
#   - entity: sensor.bw9_totalstarttime
#   - entity: sensor.bw9_today
#   - entity: sensor.bw9_total
#   - entity: script.bw9_reset
#   - entity: automation.bw9_switch_left_on
# show_header_toggle: false
# type: entities